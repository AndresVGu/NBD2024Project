@model NBDProject2024.ViewModels.EmployeeAdminVM

<partial name="_ViewHeading" />
<hr />

<form asp-action="Edit">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="row">
        <div class="col-md-4">
            
            <input type="hidden" asp-for="ID" />
            <div class="form-group ">
                <label asp-for="FirstName" class="control-label">First Name*:</label>
                <input asp-for="FirstName" class="form-control" placeholder="E.g. John" autofocus/>
                <span asp-validation-for="FirstName" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="MiddleName" class="control-label">Middle Name (optional):</label>
                <input asp-for="MiddleName" class="form-control" placeholder="E.g. Jeremy" />
                <span asp-validation-for="MiddleName" class="text-danger"></span>
            </div>

            <div class="form-group ">
                <label asp-for="LastName" class="control-label">Last Name*:</label>
                <input asp-for="LastName" class="form-control" placeholder="E.g. Doe" />
                <span asp-validation-for="LastName" class="text-danger"></span>
            </div>

            <div class="form-group ">
                <label asp-for="Phone" class="control-label">Phone*:</label>
                <input asp-for="Phone" class="form-control" placeholder="E.g. 1234567890" />
                <span asp-validation-for="Phone" class="text-danger"></span>
            </div>
        

        </div>

        <div class="col-md-4">
            <div class="form-group ">
                <label asp-for="Position" class="control-label">Position*:</label>
                <select asp-for="Position" class="form-control"
                    asp-items="Html.GetEnumSelectList<Positionemp>()">
                    <option value="">Select a Position</option>
                    </select>
                <span asp-validation-for="Position" class="text-danger"></span>
            </div>

           

            <div class="form-group ">
                <label asp-for="Email" class="control-label">Email*:</label>
                <input asp-for="Email" class="form-control" placeholder="E.g. example@outlook.com" />
                <span asp-validation-for="Email" class="text-danger"></span>
                <div>
                    Note: Changing Email will reset the password for the new Login and the user will need to use Forgot Password with the new Email.
                </div>
            </div>

            <div class="form-group form-switch">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Active" /> @Html.DisplayNameFor(model => model.Active)
                </label>
                @{
                    if(Model.Active == true)
                    {
                        <div>
                            <strong>
                                Warning! If you make this user inactive, their login to the system will alse be removed.
                                If you ever want to allow them to login again, make them Active and let them know they must use Forgot Password to set a new one.
                            </strong>
                        </div>
                    }
                    else
                    {
                        <div>
                            <strong>
                                If you make this user active, let them know to use Forgot Password to set a new one.
                            </strong>
                        </div>
                    }
                }
            </div>

            <div class="form-group">
                <label asp-for="UserRoles" class="control-label"></label>
                <table>
                    <tr>
                        @{
                            int cnt = 0;
                            List<NBDProject2024.ViewModels.RoleVM> roles = ViewBag.Roles;
                            foreach (var role in roles)
                            {
                                if (cnt++ % 3 == 0)
                                {
                                @:</tr><tr>
                                }
                                @:<td>
                                    <div class="form-check form-switch">
                                    
                                        <input type="checkbox"
                                                id="@role.RoleName-CheckBox"
                                               class="form-check-input"
                                               name="selectedRoles"
                                               value="@role.RoleName"
                                               @(Html.Raw(role.Assigned ? "checked=\"checked\"" : "")) />

                                        <label class="form-check-label"
                                        "@role.RoleName-CheckBox">@role.RoleName &nbsp;&nbsp;</label>


                                    </div>

                                   
                                @:</td>
                            }
                        @:</tr>
                        }
                    </table>
                </div>

        </div>

    </div>
    <div class="form-group">
        <input type="submit" value="Save" class="btn btn-primary" />
    </div>
</form>

<div>
    <partial name="_BackToList" />
</div>

                                        
                                        @section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
                                        }