@model IEnumerable<NBDProject2024.Models.Bid>
<partial name="_ViewHeading" />



<!--Filtering Form-->
<form asp-action="Index" method="get">

    <input type="hidden" name="sortDirection" value="@ViewData["sortDirection"]" />
    <input type="hidden" name="sortField" value="@ViewData["sortField"]" />
    <div class="form-horizontal">
        <button class="btn @ViewData["Filtering"]" type="button" data-bs-toggle="collapse" id="filterToggle" data-bs-target="#collapseFilter" aria-expanded="false" aria-controls="collapseFilter">
            Filter/Search @ViewData["numberFilters"]
        </button><br /><br />
        <div class="collapse @ViewData["ShowFilter"]" id="collapseFilter">
            <div class="card card-body bg-light">

                <!--Filters-->
                <div class="row">
                    <!--Select by string-->
                    <div class="form-group col-md-4">
                        <label class="control-label">Search By Bid:</label>
                        @Html.TextBox("SearchString", null, new { @class = "form-control", @placeholder = "Eg Date(yyyy-mm-dd)/ProjectName" })
                    </div>
                    <!--Button-->
                    <div class="form-group col-md-4 align-self-end">
                        <input type="submit" name="actionButton" value="Filter" class="btn btn-outline-success" data-bs-toggle="tooltip" title="Apply filters" />
                        <a asp-action="Index" class="btn btn-outline-danger" data-bs-toggle="tooltip" title="Clear all filters">Clear</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
    @if (TempData["AlertMessageDelete"] != null)
    {
        <br />
        <div class="alert alert-success">
            <strong>Success !</strong> @TempData["AlertMessageDelete"]
        </div>

    }
    <table class="table table-hover">
        <thead>
            <tr class="table-primary">
                <th>
                    <input type="submit" name="actionButton" value="Bid Date" class="btn btn-link " data-bs-toggle="tooltip" title="Sort by Bid Date" />

                </th>
                <th>
                    <input type="submit" name="actionButton" value="Project" class="btn btn-link " data-bs-toggle="tooltip" title="Sort by Project Name" />


                </th>

                <th>

                    <label class=" text-lg-start ">Materials</label>


                </th>



                <th>
                    <label class="text-lg-start  ">Total Materials</label>


                </th>

                <th>
                    <label class="text-lg-start  ">Labours</label>


                </th>

                <th>
                    <label class=" text-lg-start  ">Total Labours</label>


                </th>
                <th>
                    <label class=" text-lg-start  ">Total</label>


                </th>
                @if (User.IsInRole("Sales")){
                    <th class="text-center">
                        <label>Details</label>
                    </th>
                }
                else
                {
                
                <th class="text-center">
                    <a class="btn btn-outline-success" asp-action="Create">Add Bid</a>
                </th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.BidDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Project.ProjectName)
                    </td>
                    <!--Materials-->
                    <td>
                        @{
                            int specCount = item.BidMaterials.Count;
                            if (specCount > 0)
                            {
                                string firstCond = "Show Materials";
                                if (specCount > 1)
                                {
                                    string specList = "";
                                    var c = item.BidMaterials.ToList();
                                    for (int i = 0; i < specCount; i++)//Skip the first because we have it already
                                    {
                                        specList += c[i].MaterialQuantity + " " + c[i].Materials.Name
                                        + " <br />";
                                    }
                                    <a class="" role="button" data-bs-toggle="collapse" href="#collapseSpecalty@(item.ID)"
                                       aria-expanded="false" aria-controls="collapseSpecalty@(item.ID)">
                                        @firstCond <span class="badge bg-info">@specCount</span>
                                    </a>
                                    <div class="collapse" id="collapseSpecalty@(item.ID)">
                                        @Html.Raw(specList)
                                    </div>
                                }
                                else
                                {
                                    @firstCond
                                }
                            }
                        }
                    </td>


                    <td>
                        @{
                            double specListTotal = 0.0;
                            var mat = item.BidMaterials.ToList();
                            foreach (var e in mat)
                            {
                                specListTotal += e.MaterialQuantity * e.Materials.Price;
                            }
                            @specListTotal.ToString("C2")
                        }
                    </td>

                    <!--Labour-->
                    <td>
                        @{
                            int labCount = item.BidLabours.Count;
                            if (labCount > 0)
                            {
                                string firstCond = "Show Labors";
                                //item.BidLabours.FirstOrDefault().Labours.Name;
                                if (labCount > 1)
                                {
                                    string labList = "";
                                    var l = item.BidLabours.ToList();
                                    for (int i = 0; i < labCount; i++)//Skip the first because we have it already
                                    {
                                        labList += l[i].Labours.Name + " <br />";
                                    }
                                    <a class="" role="button" data-bs-toggle="collapse" href="#collapseSpecalty@(item.ID)"
                                       aria-expanded="false" aria-controls="collapseSpecalty@(item.ID)">
                                        @firstCond <span class="badge bg-info">@labCount</span>
                                    </a>
                                    <div class="collapse" id="collapseSpecalty@(item.ID)">
                                        @Html.Raw(labList)
                                    </div>
                                }
                                else
                                {
                                    @firstCond
                                }
                            }
                        }


                    </td>

                    <td>

                        @{

                            double laboListTotal = 0.0;
                            var labo = item.BidLabours.ToList();
                            foreach (var e in labo)
                            {
                                laboListTotal += e.HoursQuantity * e.Labours.Price;
                            }


                            @laboListTotal.ToString("C2")

                        }
                    </td>


                    <td>
                        @{

                            var mTotal = specListTotal;
                            var lTotal = laboListTotal;

                            var finalTotal = mTotal + lTotal;

                            @finalTotal.ToString("C2")

                        }

                    </td>

                    <td class="text-center">
                        @if (User.IsInRole("Sales"))
                        {
                            <a asp-action="Details" asp-route-id="@item.ID" class="btn btn-sm btn-outline-primary"
                               role="button" data-bs-toggle="tooltip" title="@ViewData["ControllerFriendlyName"] Details">
                                &#x1F50E;
                            </a>
                        }
                        else
                        {

                        <a asp-action="Edit" asp-route-id="@item.ID" class="btn btn-sm btn-outline-primary"
                           role="button" data-bs-toggle="tooltip" title="Edit @ViewData["ControllerFriendlyName"]">
                            &#x270E;
                        </a>
                        <a asp-action="Details" asp-route-id="@item.ID" class="btn btn-sm btn-outline-primary"
                           role="button" data-bs-toggle="tooltip" title="@ViewData["ControllerFriendlyName"] Details">
                            &#x1F50E;
                        </a>
                        <a asp-action="Delete" asp-route-id="@item.ID" class="btn btn-sm btn-outline-primary"
                           role="button" data-bs-toggle="tooltip" title="Delete @ViewData["ControllerFriendlyName"]">
                            &#x274C;
                        </a>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <partial name="_PagingNavBar" />
</form>

@section Scripts {
    <script type="text/javascript">
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl)
        })
    </script>


}
